[{"C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\index.js":"1","C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\reportWebVitals.js":"2","C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\Home\\index.js":"3","C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\Helper\\utilities.js":"4","C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\Home\\User\\index.js":"5","C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\Home\\Button\\index.js":"6","C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\Home\\Loader\\index.js":"7"},{"size":503,"mtime":1607703341651,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607673697089,"results":"10","hashOfConfig":"9"},{"size":6735,"mtime":1607860060186,"results":"11","hashOfConfig":"9"},{"size":120,"mtime":1607798058064,"results":"12","hashOfConfig":"9"},{"size":626,"mtime":1607857481350,"results":"13","hashOfConfig":"9"},{"size":305,"mtime":1607853546452,"results":"14","hashOfConfig":"9"},{"size":134,"mtime":1607853952914,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"h4x040",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\index.js",[],["33","34"],"C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\reportWebVitals.js",[],"C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\Home\\index.js",["35"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport { BASE_URL, API_ID } from \"../Helper/utilities\";\r\nimport User from \"./User\";\r\nimport Loader from \"./Loader\";\r\nimport axios from \"axios\";\r\nimport Button from \"./Button\";\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\nimport swal from \"@sweetalert/with-react\";\r\nconst Home = () => {\r\n  const [groupImage, SetGroupImage] = useState(\r\n    \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png\"\r\n  );\r\n  const [groupName, SetGroupName] = useState(\"\");\r\n  const [groupDescription, SetGroupDescription] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState(null);\r\n  const [list, setList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    axios\r\n      .get(`${BASE_URL}/user?limit=10`, { headers: { \"app-id\": API_ID } })\r\n      .then(({ data }) => {\r\n        const temp = data.data;\r\n\r\n        let arr = [];\r\n        temp.forEach((user) => {\r\n          user.isSelected = false;\r\n          arr.push(user);\r\n        });\r\n\r\n        setData(arr);\r\n\r\n      })\r\n\r\n      .catch(console.error)\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  const selectedUser = function (element, idx) {\r\n    element.isSelected = true;\r\n    setList([...list, element]);\r\n    data[idx] = element;\r\n    setData((prev) => data);\r\n    //   console.log(\"adding\",data)\r\n  };\r\n\r\n  const saveGroup = function () {\r\n    const groupToSave = {\r\n      groupName: groupName,\r\n      groupDescription: groupDescription,\r\n      groupImage: groupImage,\r\n      selectedUsers: list,\r\n    };\r\n\r\n    if(groupToSave.selectedUsers.length <1 )\r\n    swal(\"You have not selected any member\", \"\", \"warning\");\r\n    else if(groupToSave.groupName.length <1 )\r\n    swal(\"Group name is empty\", \"\", \"warning\");\r\n    else if(groupToSave.groupDescription.length <1 )\r\n    swal(\"Group Description is empty\", \"\", \"warning\");\r\n    else{\r\n      swal(\"Group Created Successfully!\", \"\", \"success\");\r\n      console.log(\"Group to be save is\", groupToSave);\r\n    }\r\n\r\n  };\r\n  const removeSelectedUser = function (element, idx) {\r\n    for (let i in list) {\r\n      if (list[i].id === element.id) {\r\n        element.isSelected = false;\r\n        list.splice(i, 1);\r\n        setList([...list]);\r\n\r\n        data[idx] = element;\r\n        setData((prev) => data);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  const sortType = function (e, currentdata) {\r\n    if (e.target.value === \"A-Z\") {\r\n      currentdata.sort(function (a, b) {\r\n        let nameA = a.firstName.toUpperCase();\r\n        let nameB = b.firstName.toUpperCase();\r\n        if (nameA < nameB) {\r\n          return -1;\r\n        }\r\n        if (nameA > nameB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n\r\n      setData([...currentdata]);\r\n    } else {\r\n      currentdata.sort(function (a, b) {\r\n        let nameA = a.firstName.toUpperCase();\r\n        let nameB = b.firstName.toUpperCase();\r\n        if (nameA > nameB) {\r\n          return -1;\r\n        }\r\n        if (nameA < nameB) {\r\n          return 1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n      setData([...currentdata]);\r\n    }\r\n  };\r\n\r\n  const abort = function () {\r\n    swal({\r\n      title: \"Are you sure?\",\r\n      text: \"Once deleted, you will not be able to recover this group!\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        swal(\"Poof! Your group has been deleted!\", {\r\n          icon: \"success\",\r\n        });\r\n      } else {\r\n        swal(\"Your other groups are safe!\");\r\n      }\r\n    });\r\n    console.log(\"cancel the group Creation\");\r\n  };\r\n  const groupImageHandler = function (e) {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      if (reader.readyState === 2) {\r\n        SetGroupImage(reader.result);\r\n      }\r\n    };\r\n    reader.readAsDataURL(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home_main\">\r\n      <div>\r\n        <h1 className=\"home_heading\">Create Group</h1>\r\n      </div>\r\n\r\n      <div className=\"home_group_creation\">\r\n        <div className=\"photo_uploading\">\r\n          <div className=\"photo_container\">\r\n            <img\r\n              className=\"photo_holder\"\r\n              src={groupImage}\r\n              alt=\"\"\r\n              id=\"img\"\r\n              className=\"img\"\r\n            />\r\n\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              name=\"image-upload\"\r\n              id=\"input\"\r\n              onChange={(e) => {\r\n                groupImageHandler(e);\r\n              }}\r\n            />\r\n            <div className=\"label\">\r\n              <label className=\"photo_upload\" htmlFor=\"input\">\r\n                <p>\r\n                  <AddPhotoAlternateIcon /> Group Logo\r\n                </p>\r\n              </label>\r\n            </div>\r\n            <div className=\"sort_box\">\r\n              <select onChange={(e) => sortType(e, data)}>\r\n                <option>Sort</option>\r\n                <option>A-Z</option>\r\n                <option>Z-A</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"group_text\">\r\n          <div className=\"name_section\">\r\n            <input\r\n              placeholder=\"Group Name\"\r\n              onChange={(e) => SetGroupName(e.target.value)}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"description_section\">\r\n            <input\r\n              placeholder=\"Group Description\"\r\n              onChange={(e) => SetGroupDescription(e.target.value)}\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {loading && <Loader />}\r\n      <div className=\"user_section\">\r\n        {data &&\r\n          data.map((element, idx) => (\r\n            <div className=\"user_element\">\r\n              <User\r\n                name={element.firstName}\r\n                image={element.picture}\r\n                key={element.id}\r\n                isSelected={element.isSelected}\r\n                onClick={() => {\r\n                  if (element.isSelected) {\r\n                    removeSelectedUser(element, idx);\r\n                  } else {\r\n                    selectedUser(element, idx);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <div className=\"button_section\">\r\n        <Button\r\n          text={\"Create\"}\r\n          color={\"rgb(58, 39, 221)\"}\r\n          onClick={saveGroup}\r\n        />\r\n        <Button text={\"Remove\"} color={\"rgb(221, 39, 57)\"} onClick={abort} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\Helper\\utilities.js",[],"C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\Home\\User\\index.js",[],"C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\Home\\Button\\index.js",[],["36","37"],"C:\\Users\\tanuj vyas\\Desktop\\Projectts\\caavo-labs\\src\\Home\\Loader\\index.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":156,"column":15,"nodeType":"44","endLine":156,"endColumn":30},{"ruleId":"38","replacedBy":"45"},{"ruleId":"40","replacedBy":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["47"],["48"],"no-global-assign","no-unsafe-negation"]